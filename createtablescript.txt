CREATE DATABASE IF NOT EXISTS `hoa_db`;
USE `hoa_db`;

CREATE TABLE regions 
(
    region VARCHAR(45) PRIMARY KEY NOT NULL
);

CREATE TABLE individual
(
    individual_id INT PRIMARY KEY NOT NULL,
    indiv_lastname VARCHAR(45) NOT NULL,
    indiv_firstname VARCHAR(45) NOT NULL,
    indiv_mi VARCHAR(45) NOT NULL,
    email VARCHAR(45) NOT NULL,
    birthday DATE NOT NULL,
    gender ENUM('M', 'F') NOT NULL,
    fb_url VARCHAR(45) NULL,
    picture BLOB NOT NULL,
    indiv_type ENUM('R', 'H') NOT NULL,
    UNIQUE INDEX `ind_indiv_email` (email),
    UNIQUE INDEX `ind_indiv_fb_url` (fb_url)
);

CREATE TABLE officer_positions
(
    `position` VARCHAR(25) PRIMARY KEY NOT NULL
);

CREATE TABLE elections
(
    elec_date DATE PRIMARY KEY NOT NULL,
    venue VARCHAR(45) NOT NULL,
    quorum TINYINT(1) NOT NULL,
    witness_lastname VARCHAR(45) NOT NULL,
    witness_firstname VARCHAR(45) NOT NULL,
    witness_mi VARCHAR(45) NOT NULL,
    witness_mobile INT(10) NOT NULL
);

CREATE TABLE household
(
    household_id INT(5) PRIMARY KEY NOT NULL
);

CREATE TABLE receipt
(
    or_no INT PRIMARY KEY NOT NULL,
    transact_date DATETIME NOT NULL,
    total_amount FLOAT NOT NULL
);

CREATE TABLE Rules
(
	RuleNumber INT PRIMARY KEY NOT NULL,
    RuleDescription VARCHAR(1000) NOT NULL
);

CREATE TABLE provinces 
(
    province_name VARCHAR(45) PRIMARY KEY NOT NULL,
    region VARCHAR(45) NOT NULL,
    INDEX `ind_region` (region),
    CONSTRAINT `fk_region`
    FOREIGN KEY (region)
    REFERENCES hoa_db.regions (region)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE cities
(
    city VARCHAR(45) PRIMARY KEY NOT NULL,
    province VARCHAR(45) NOT NULL,
    INDEX `ind_province` (province),
    CONSTRAINT `fk_province`
    FOREIGN KEY (province)
    REFERENCES hoa_db.provinces (province_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE zipcodes
(
    zipcode INT PRIMARY KEY NOT NULL,
    province VARCHAR(45) NOT NULL,
    brgy VARCHAR(45) NOT NULL,
    city VARCHAR(45) NOT NULL,
    INDEX `ind_zip_city` (city),
    INDEX `ind_zip_province` (province),
    CONSTRAINT `fk_zip_city`
    FOREIGN KEY (city)
    REFERENCES hoa_db.cities (city)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_zip_province`
    FOREIGN KEY (province)
    REFERENCES hoa_db.provinces (province_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


CREATE TABLE address
(
    address_id INT PRIMARY KEY NOT NULL,
    stno VARCHAR(45) NOT NULL,
    stname VARCHAR(45) NOT NULL,
    brgy VARCHAR(45) NOT NULL,
    city VARCHAR(45) NOT NULL,
    province VARCHAR(45) NOT NULL,
    zipcode INT NOT NULL,
    x_coord FLOAT NOT NULL,
    y_coord FLOAT NOT NULL,
    INDEX `ind_address_city` (city),
    INDEX `ind_address_province` (province),
    INDEX `ind_address_zipcode` (zipcode),
    CONSTRAINT `fk_address_city`
    FOREIGN KEY (city)
    REFERENCES hoa_db.cities (city)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_address_province`
    FOREIGN KEY (province)
    REFERENCES hoa_db.provinces (province_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_address_zipcode` 
    FOREIGN KEY (zipcode)
    REFERENCES hoa_db.zipcodes (zipcode)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE hoa 
(
    hoa_name VARCHAR(45) PRIMARY KEY NOT NULL, 
    office_add INT NOT NULL,
    year_est INT NOT NULL, 
    website VARCHAR(45) NOT NULL, 
    subd_name VARCHAR(45) NOT NULL, 
    dues_collection VARCHAR(45) NOT NULL,
    UNIQUE INDEX `ind_hoa_subd_name` (subd_name),
    INDEX `ind_hoa_office_add` (office_add),
    CONSTRAINT `fk_hoa_office_add`
    FOREIGN KEY (office_add)
    REFERENCES hoa_db.address (address_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE homeowner
(
    homeowner_id INT(5) PRIMARY KEY NOT NULL,
    homeowner_name VARCHAR(45) NOT NULL,
    years_ho INT(2) NOT NULL,
    undertaking TINYINT(1) NOT NULL,
    membership TINYINT(1) NOT NULL,
    is_resident TINYINT(1) NOT NULL,
    current_add INT NOT NULL,
    other_add INT NULL,
    other_email VARCHAR(45) NULL,
    hoa_name VARCHAR(45) NOT NULL,
    individual_id INT NOT NULL,
    INDEX `ind_homeowner_hoa_name` (hoa_name),
    INDEX `ind_homeowner_curr_add` (current_add),
    INDEX `ind_homeowner_other_add` (other_add),
    INDEX `ind_homeowner_indiv_id` (individual_id),
    CONSTRAINT `fk_homeowner_hoa_name`
    FOREIGN KEY (hoa_name)
    REFERENCES hoa_db.hoa (hoa_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_homeowner_curr_add`
    FOREIGN KEY (current_add)
    REFERENCES hoa_db.address (address_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_homeowner_other_add`
    FOREIGN KEY (other_add)
    REFERENCES hoa_db.address (address_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_homeowner_indiv_id`
    FOREIGN KEY (individual_id)
    REFERENCES hoa_db.individual (individual_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE hoa_officer
(
    officer_id INT(5) PRIMARY KEY NOT NULL,
    homeowner_id INT(5) NOT NULL,
    `position` VARCHAR(25) NOT NULL,
    office_start DATE NOT NULL,
    office_end DATE NOT NULL,
    elec_date DATE NOT NULL,
    INDEX `ind_hoaofficer_homeowner_id` (homeowner_id),
    INDEX `ind_hoaofficer_position` (`position`),
    INDEX `ind_hoaofficer_elec_date` (elec_date),
    CONSTRAINT `fk_hoaofficer_homeowner_id`
    FOREIGN KEY (homeowner_id)
    REFERENCES hoa_db.homeowner (homeowner_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_hoaofficer_position`
    FOREIGN KEY (`position`)
    REFERENCES hoa_db.officer_positions (`position`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_hoaofficer_elec_date`
    FOREIGN KEY (elec_date)
    REFERENCES hoa_db.elections (elec_date)
    ON DELETE NO ACTION
	ON UPDATE NO ACTION
);

CREATE TABLE hoa_files
(
    file_id INT PRIMARY KEY NOT NULL,
    file_name VARCHAR(45) UNIQUE NOT NULL,
    description VARCHAR(45) NOT NULL,
    location VARCHAR(45) NOT NULL,
    type ENUM('document', 'spreadsheet', 'pdf', 'image', 'others') NOT NULL,
    date_submitted DATETIME NOT NULL,
    `owner` VARCHAR(45) NOT NULL,
    uploader INT(5) NOT NULL,
    hoa_name VARCHAR(45) NOT NULL,
    INDEX `ind_hoa_files_hoa_name` (hoa_name),
    INDEX `ind_hoa_files_uploader` (uploader),
    CONSTRAINT `fk_hoa_files_hoa_name`
    FOREIGN KEY (hoa_name)
    REFERENCES hoa_db.hoa (hoa_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_hoa_files_uploader`
    FOREIGN KEY (uploader)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE property
(
    property_code VARCHAR(6) PRIMARY KEY NOT NULL,
    size DECIMAL NOT NULL,
    turnover DATE NOT NULL,
    `type` ENUM ('R', 'C') NOT NULL,
    homeowner_id INT(5) NOT NULL,
    INDEX `ind_property_homeowner_id` (homeowner_id),
    CONSTRAINT `fk_property_homeowner_id`
    FOREIGN KEY (homeowner_id)
    REFERENCES hoa_db.homeowner (homeowner_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE resident
(
    resident_id INT(5) PRIMARY KEY NOT NULL,
    is_renter TINYINT(1) NOT NULL,
    relation_ho VARCHAR(45) NOT NULL,
    undertaking TINYINT(1) NOT NULL,
    household_id INT(5) NOT NULL,
    authorized_resident TINYINT(1) NOT NULL,
    individual_id INT NOT NULL,
    INDEX `ind_resident_household_id` (household_id),
    INDEX `ind_resident_individual_id` (individual_id),
    CONSTRAINT `fk_resident_household_id`
    FOREIGN KEY (household_id)
    REFERENCES hoa_db.household (household_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_resident_individual_id`
    FOREIGN KEY (individual_id)
    REFERENCES hoa_db.individual (individual_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE resident_idcard
(
	resident_idcardno VARCHAR(10) PRIMARY KEY NOT NULL,
    date_requested DATETIME NOT NULL,
    request_reason VARCHAR(45) NOT NULL,
    date_issued DATETIME NOT NULL,
    authorizing_officer VARCHAR(45) NOT NULL,
    or_no INT NOT NULL,
    amount_paid FLOAT NOT NULL,
    `status` ENUM('Active', 'Inactive', 'Lost') NOT NULL,
    resident_id INT(5) NOT NULL,
    INDEX `ind_resident_idcard_resident_id` (resident_id),
    INDEX `ind_resident_idcard_receipt` (or_no),
    CONSTRAINT `fk_resident_idcard_resident_id`
    FOREIGN KEY (resident_id)
    REFERENCES hoa_db.resident (resident_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_resident_idcard_receipt`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE mobile
(
	mobile_no INT(10) PRIMARY KEY NOT NULL,
    individual_id INT NOT NULL,
    INDEX `ind_mobile_individual_id` (individual_id),
    CONSTRAINT `fk_mobile_individual_id`
    FOREIGN KEY (individual_id)
    REFERENCES hoa_db.individual (individual_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE vehicle
(
	plate_no VARCHAR(7) PRIMARY KEY NOT NULL,
    owner_lastname VARCHAR(45) NOT NULL,
    owner_firstname VARCHAR(45) NOT NULL,
    owner_mi VARCHAR(45) NOT NULL,
    resident_id INT(5) NULL,
    vehicle_class ENUM('P', 'C') NOT NULL,
    vehicle_type ENUM('sedan', 'SUV', 'MPV/AUV', 'van', 'truck', 'motorcycle/scooter', 'others') NOT NULL,
    date_registered DATETIME NOT NULL,
    reg_fee DECIMAL NOT NULL,
    or_no INT NOT NULL,
    INDEX `ind_vehicle_resident_id` (resident_id),
    INDEX `ind_vehicle_or_no` (or_no),
    CONSTRAINT `fk_vehicle_resident_id`
    FOREIGN KEY (resident_id)
    REFERENCES hoa_db.resident (resident_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_vehicle_or_no`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE orcr
(
	orcr VARCHAR(45) PRIMARY KEY NOT NULL,
    plate_no VARCHAR(7) NOT NULL,
    years_valid VARCHAR(45) NOT NULL,
    orcr_file VARCHAR(45) NOT NULL,
    INDEX `ind_orcr_plate_no` (plate_no),
    INDEX `ind_orcr_orcr_file` (orcr_file),
    CONSTRAINT `fk_orcr_plate_no`
    FOREIGN KEY (plate_no)
    REFERENCES hoa_db.vehicle (plate_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_orcr_orcr_file`
    FOREIGN KEY (orcr_file)
    REFERENCES hoa_db.hoa_files (file_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE sticker
(
	sticker_id INT PRIMARY KEY NOT NULL,
    year_valid INT(4) NOT NULL,
    plate_no VARCHAR(7) NOT NULL,
    owner_type ENUM('R', 'NR') NOT NULL,
    authorizing_officer INT(5) NOT NULL,
    date_acquired DATETIME NOT NULL,
    or_no INT NOT NULL,
    INDEX `ind_sticker_plate_no` (plate_no),
    INDEX `ind_sticker_authorizing_officer` (authorizing_officer),
    INDEX `ind_sticker_or_no` (or_no),
    CONSTRAINT `fk_sticker_plate_no`
    FOREIGN KEY (plate_no)
    REFERENCES hoa_db.vehicle (plate_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_sticker_authorizing_officer`
    FOREIGN KEY (authorizing_officer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_sticker_receipt`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE hoaofficer_sched
(
	officer_id INT(5) NOT NULL,
    sched_time ENUM('AM', 'PM') NOT NULL,
    avail_Mon TINYINT(1) NULL,
    avail_Tue TINYINT(1) NULL,
    avail_Wed TINYINT(1) NULL,
    avail_Thu TINYINT(1) NULL,
    avail_Fri TINYINT(1) NULL,
    avail_Sat TINYINT(1) NULL,
    avail_Sun TINYINT(1) NULL,
    PRIMARY KEY (`officer_id`, `sched_time`),
    INDEX `ind_hoaofficer_sched_officer_id` (officer_id),
    CONSTRAINT `fk_hoaofficer_sched_officer_id`
    FOREIGN KEY (officer_id)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE asset
(
	asset_id VARCHAR(10) PRIMARY KEY NOT NULL,
    asset_name VARCHAR(45) NOT NULL,
    description VARCHAR(45) NOT NULL,
    date_acquired DATE NOT NULL,
    for_rent TINYINT(1) NOT NULL,
    `value` FLOAT NOT NULL,
    asset_type ENUM('P', 'E', 'F', 'O') NOT NULL,
    asset_status ENUM('W', 'DE', 'FR', 'FD', 'DI') NOT NULL,
    location VARCHAR(45) NOT NULL,
    location_x FLOAT NOT NULL,
    location_y FLOAT NOT NULL,
    hoa_name VARCHAR(45) NOT NULL,
    asset_container VARCHAR(10) NULL,
    INDEX `ind_asset_hoa_name` (hoa_name),
    INDEX `ind_asset_asset_container` (asset_container),
    CONSTRAINT `fk_asset_hoa_name`
    FOREIGN KEY (hoa_name)
    REFERENCES hoa_db.hoa (hoa_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_asset_asset_container`
    FOREIGN KEY (asset_container)
    REFERENCES hoa_db.asset (asset_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE commercial_prop
(
	property_code VARCHAR(6) PRIMARY KEY NOT NULL,
    commercial_type ENUM('O', 'L', 'R', 'M') NOT NULL,
    commercial_maxten INT NOT NULL,
    INDEX `ind_commercial_prop_property_code` (property_code),
    CONSTRAINT `fk_commercial_prop_property_code`
    FOREIGN KEY (property_code)
    REFERENCES hoa_db.property (property_code)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE residential_prop
(
	property_code VARCHAR(6) PRIMARY KEY NOT NULL,
    household_id INT(5) NOT NULL,
    INDEX `ind_residential_prop_property_code` (property_code),
    INDEX `ind_residential_prop_household_id` (household_id),
    CONSTRAINT `fk_residential_prop_property_code`
    FOREIGN KEY (property_code)
    REFERENCES hoa_db.property (property_code)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_residential_prop_household_id`
    FOREIGN KEY (household_id)
    REFERENCES hoa_db.household (household_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE AssetActivity
(
	AssetActivityID INT(8) PRIMARY KEY NOT NULL,
    asset_id VARCHAR(10) NOT NULL,
    Activity_Description VARCHAR(45) NOT NULL,
    Activity_Date DATE NOT NULL,
    incharge_firstname VARCHAR(45) NOT NULL,
    incharge_lastname VARCHAR(45) NOT NULL,
    incharge_mi VARCHAR(3) NOT NULL,
    mobile_no INT(10) NOT NULL,
    activitylocation_x FLOAT NOT NULL,
    activitylocation_y FLOAT NOT NULL,
    or_no INT NOT NULL,
    `Status` ENUM('scheduled', 'ongoing', 'completed', 'deleted') NOT NULL,
    tentative_start DATETIME NOT NULL,
    tentative_end DATETIME NOT NULL,
    actual_start DATETIME NOT NULL,
    actual_end DATETIME NOT NULL,
    officer_id INT(5) NOT NULL,
    hoa_president INT(5) NOT NULL,
    approved TINYINT(1) NOT NULL,
    INDEX `ind_AssetActivity_asset_id` (asset_id),
    INDEX `ind_AssetActivity_mobile_no` (mobile_no),
    INDEX `ind_AssetActivity_or_no` (or_no),
    INDEX `ind_AssetActivity_officer_id` (officer_id),
    INDEX `ind_AssetActivity_hoa_president` (hoa_president),
    CONSTRAINT `fk_AssetActivity_asset_id`
    FOREIGN KEY (asset_id)
    REFERENCES hoa_db.asset (asset_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_receiptID`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_mobile_no`
    FOREIGN KEY (mobile_no)
    REFERENCES hoa_db.mobile (mobile_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_officer_id`
    FOREIGN KEY (officer_id)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_hoa_president`
    FOREIGN KEY (hoa_president)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE BusinessPermit
(
	BusinessPermitID INT PRIMARY KEY NOT NULL,
    Expiration_Date DATE NOT NULL,
    Processing_Officer INT(5) NOT NULL,
    Permit_Filename VARCHAR(45) NOT NULL,
    INDEX `ind_BusinessPermit_processing_officer` (Processing_Officer),
    INDEX `ind_BusinessPermit_permit_filename` (Permit_Filename),
    CONSTRAINT `fk_BusinessPermit_processing_officer`
    FOREIGN KEY (Processing_Officer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_BusinessPermit_permit_filename`
    FOREIGN KEY (Permit_Filename)
    REFERENCES hoa_db.hoa_files (file_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE Business
(
    Business_Name VARCHAR(45) PRIMARY KEY NOT NULL,
    BusinessOwner_Name VARCHAR(45) UNIQUE NOT NULL,
    Residentship TINYINT(1) NOT NULL,
    Business_Address INT NOT NULL,
    Business_Email VARCHAR(45) NOT NULL,
    Business_Description VARCHAR(45) NOT NULL,
    Business_Type ENUM('Sole Proprietorship', 'Partnership', 'Corporation') NOT NULL,
	Business_StartDATE DATE NOT NULL,
    Business_EndDATE DATE NULL,
    Business_FacebookURL VARCHAR(45) NULL,
    BusinessPermitID INT NOT NULL,
    INDEX `ind_Business_Address` (Business_Address),
    INDEX `ind_Business_Business_Permit_ID` (BusinessPermitID),
    CONSTRAINT `fk_Business_Address`
    FOREIGN KEY (Business_Address)
    REFERENCES hoa_db.address (address_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_Business_Business_Permit_ID` 
    FOREIGN KEY (BusinessPermitID)
    REFERENCES hoa_db.BusinessPermit (BusinessPermitID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE BusinessEmployees
(
	EmployeeID INT PRIMARY KEY NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    Employee_LastName VARCHAR(45) NOT NULL,
    Employee_FirstName VARCHAR(45) NOT NULL,
    `Employee_MobileNo.` INT(10) NOT NULL,
    Employee_Position VARCHAR(45) NOT NULL,
    Authorized_Employee TINYINT(1) NOT NULL,
    INDEX `ind_BusinessEmployees_mobile_no` (`Employee_MobileNo.`),
    INDEX `ind_BusinessEmployees_Business_Name` (Business_Name),
    CONSTRAINT `fk_BusinessEmployees_mobile_no`
    FOREIGN KEY (`Employee_MobileNo.`)
    REFERENCES hoa_db.mobile (mobile_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_BusinessEmployees_Business_Name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE business_schedule
(
	business_sched_time ENUM('AM', 'PM') NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    open_Mon TINYINT(1) NOT NULL,
    open_Tue TINYINT(1) NOT NULL,
    open_Wed TINYINT(1) NOT NULL,
    open_Thu TINYINT(1) NOT NULL,
    open_Fri TINYINT(1) NOT NULL,
    open_Sat TINYINT(1) NOT NULL,
    open_Sun TINYINT(1) NOT NULL,
    PRIMARY KEY (business_sched_time, Business_Name),
    INDEX `ind_business_schedule_business_name` (Business_Name),
    CONSTRAINT `fk_business_schedule_business_name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE Incident
(
	IncidentID INT PRIMARY KEY NOT NULL,
    Incident_Date DATE NOT NULL,
    Incident_Description VARCHAR(45) NOT NULL,
    isResident VARCHAR(45) NOT NULL,
    Business_Involved VARCHAR(45) NOT NULL,
    InvestigatingOfficer_ID INT(5) NOT NULL,
    PenaltyImposed VARCHAR(45) NULL,
    SecondingOfficer_ID INT(5) NOT NULL,
    Seconding_PenaltyImposed VARCHAR(45) NULL,
    INDEX `ind_incident_business_involved` (Business_Involved),
    INDEX `ind_incident_investigating_officer` (InvestigatingOfficer_ID),
    INDEX `ind_incident_seconding_officer` (SecondingOfficer_ID),
    CONSTRAINT `fk_incident_business_involved`
    FOREIGN KEY (Business_Involved)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_investigating_officer`
    FOREIGN KEY (InvestigatingOfficer_ID)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_seconding_officer`
    FOREIGN KEY (SecondingOfficer_ID)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE Evidence
(
	EvidenceID INT PRIMARY KEY NOT NULL,
    Evidence_Name VARCHAR(45) NOT NULL,
    Evidence_Description VARCHAR(45) NOT NULL,
    Evidence_Filename VARCHAR(45) NOT NULL,
    SubmittingResident INT(5) NOT NULL,
    AcceptingOfficer INT(5) NOT NULL,
    EvidenceSubmission_Date DATE NOT NULL,
    IncidentID INT NOT NULL,
    INDEX `ind_evidence_filename` (Evidence_Filename),
    INDEX `ind_evidence_submittingresident` (SubmittingResident),
    INDEX `ind_evidence_acceptingofficer` (AcceptingOfficer),
    INDEX `ind_evidence_incidentid` (IncidentID),
    CONSTRAINT `fk_evidence_filename`
    FOREIGN KEY (Evidence_Filename)
    REFERENCES hoa_db.hoa_files (file_name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_submittingresident`
    FOREIGN KEY (SubmittingResident)
    REFERENCES hoa_db.resident (resident_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_acceptingofficer`
    FOREIGN KEY (AcceptingOfficer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE EvidencesUsed
(
	IncidentID INT PRIMARY KEY NOT NULL,
    EvidenceID INT NOT NULL,
    INDEX `ind_evidencesused_incidentID` (IncidentID),
    INDEX `ind_evidencesued_evidenceID` (EvidenceID),
    CONSTRAINT `fk_evidencesused_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidencesued_evidenceID`
    FOREIGN KEY (EvidenceID)
    REFERENCES hoa_db.Evidence (EvidenceID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE PersonsInvolved
(
	IncidentID INT PRIMARY KEY NOT NULL,
    individual_id INT NOT NULL,
    INDEX `ind_personsinvolved_individual_id` (individual_id),
    INDEX `ind_personsinvolved_incidentID` (IncidentID),
    CONSTRAINT `fk_personsinvolved_individual_id`
    FOREIGN KEY (individual_id)
    REFERENCES hoa_db.individual (individual_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_personsinvolvd_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE Incident_RulesBroken
(
	IncidentID INT PRIMARY KEY NOT NULL,
    RuleNumber INT NOT NULL,
    INDEX `ind_incident_rulenumber` (RuleNumber),
    INDEX `ind_incident_incidentID` (IncidentID),
    CONSTRAINT `fk_incident_rulenumber`
    FOREIGN KEY (RuleNumber)
    REFERENCES hoa_db.Rules (RuleNumber)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE MonthlyDueBill
(
	BillID INT PRIMARY KEY NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    `Month` INT NOT NULL,
    `Year` INT NOT NULL,
    Date_Generated DATE NOT NULL,
    Awarded_Discount FLOAT NULL,
    Unpaiid_Dues FLOAT NULL,
    Incurred_Penalties FLOAT NULL,
    Deduction_Amount FLOAT NULL,
    Total_Amount FLOAT NOT NULL,
    Penaltied_Employee INT NOT NULL,
    INDEX `ind_monthlyduebill_business_name` (Business_Name),
    INDEX `ind_monthlyduebill_employeeid` (Penaltied_Employee),
    CONSTRAINT `fk_monthlyduebill_business_name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_monthlyduebill_employeeid`
    FOREIGN KEY (Penaltied_Employee)
    REFERENCES hoa_db.BusinessEmployees (EmployeeID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE BillItems
(
	BillItemID INT PRIMARY KEY NOT NULL,
    BillID INT NOT NULL,
    Description VARCHAR(45) NOT NULL,
    Amount FLOAT NOT NULL,
    INDEX `ind_billitems_billid` (BillID),
    CONSTRAINT `fk_billitems_billid`
    FOREIGN KEY (BillID)
    REFERENCES hoa_db.MonthlyDueBill (BillID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE Payment
(
	or_no INT PRIMARY KEY NOT NULL,
    BillID INT NOT NULL,
    Date_Of_Payment DATE NOT NULL,
    Payer VARCHAR(45) NOT NULL,
    Receiving_Officer INT(5) NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    BusinessOwner_Payer VARCHAR(45) NULL,
    AuthorizedEmployeeID_Payer INT NULL,
    INDEX `ind_payment_billid` (BillID),
    INDEX `ind_payment_receiving_officer` (Receiving_Officer),
    INDEX `ind_payment_businessowner` (BusinessOwner_Payer),
    INDEX `ind_payment_employeeid` (AuthorizedEmployeeID_Payer),
    index `ind_payment_or_no` (or_no),
    CONSTRAINT `fk_payment_billid`
    FOREIGN KEY (BillID)
    REFERENCES hoa_db.MonthlyDueBill (BillID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_receiving_officer` 
    FOREIGN KEY (Receiving_Officer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_businessowner`
    FOREIGN KEY (BusinessOwner_Payer)
    REFERENCES hoa_db.Business (BusinessOwner_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_employeeid`
    FOREIGN KEY (AuthorizedEmployeeID_Payer)
    REFERENCES hoa_db.BusinessEmployees (EmployeeID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_or_no`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);
