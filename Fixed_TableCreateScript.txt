-- -----------------------------------------------------
-- Schema hoa_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS hoa_db;
CREATE SCHEMA IF NOT EXISTS hoa_db;
USE hoa_db;

-- -----------------------------------------------------
-- Table regions
-- -----------------------------------------------------
DROP TABLE IF EXISTS regions;
CREATE TABLE IF NOT EXISTS regions (
region VARCHAR(45) NOT NULL,
PRIMARY KEY (`region`)
);
-- -----------------------------------------------------
-- Table provinces
-- -----------------------------------------------------
DROP TABLE IF EXISTS provinces;
CREATE TABLE IF NOT EXISTS provinces (
province_name VARCHAR(45) NOT NULL,
region VARCHAR(45) NOT NULL,
PRIMARY KEY (province_name),
INDEX (region ASC),
FOREIGN KEY (region)
REFERENCES regions(region)
);
-- -----------------------------------------------------
-- Table cities
-- -----------------------------------------------------
DROP TABLE IF EXISTS cities;
CREATE TABLE IF NOT EXISTS cities (
city VARCHAR(45) NOT NULL,
province VARCHAR(45) NOT NULL,
PRIMARY KEY (city),
INDEX (province ASC),
FOREIGN KEY (province)
REFERENCES provinces(province_name)
);
-- -----------------------------------------------------
-- Table zipcodes
-- -----------------------------------------------------
DROP TABLE IF EXISTS zipcodes;
CREATE TABLE IF NOT EXISTS zipcodes (
zipcode INT NOT NULL,
brgy VARCHAR(45) NOT NULL,
city VARCHAR(45) NOT NULL,
province VARCHAR(45) NOT NULL,
PRIMARY KEY (zipcode),
INDEX (city ASC),
INDEX (province ASC),
FOREIGN KEY (city)
REFERENCES cities(city),
FOREIGN KEY (province)
REFERENCES provinces(province_name)
);
-- -----------------------------------------------------
-- Table address
-- -----------------------------------------------------
DROP TABLE IF EXISTS address;
CREATE TABLE IF NOT EXISTS address (
address_id INT NOT NULL,
stno VARCHAR(45) NOT NULL,
stname VARCHAR(45) NOT NULL,
brgy VARCHAR(45) NOT NULL,
city VARCHAR(45) NOT NULL,
province VARCHAR(45) NOT NULL,
zipcode INT NOT NULL,
x_coord FLOAT NOT NULL,
y_coord FLOAT NOT NULL,
PRIMARY KEY (address_id),
INDEX (city ASC),
INDEX (province ASC),
INDEX (zipcode ASC),
FOREIGN KEY (city)
REFERENCES cities(city),
FOREIGN KEY (province)
REFERENCES provinces(province_name),
FOREIGN KEY (zipcode)
REFERENCES zipcodes(zipcode)
);
-- -----------------------------------------------------
-- Table hoa
-- -----------------------------------------------------
DROP TABLE IF EXISTS hoa;
CREATE TABLE IF NOT EXISTS hoa (
hoa_name VARCHAR(45) NOT NULL,
office_add INT NOT NULL,
year_est INT(4) NOT NULL,
website VARCHAR(45) NULL,
subd_name VARCHAR(45) NOT NULL,
dues_collection VARCHAR(45) NOT NULL,
PRIMARY KEY (hoa_name),
UNIQUE INDEX (subd_name ASC),
INDEX (office_add ASC),
FOREIGN KEY (office_add)
REFERENCES address(address_id)
);
-- -----------------------------------------------------
-- Table individual
-- -----------------------------------------------------
DROP TABLE IF EXISTS individual;
CREATE TABLE IF NOT EXISTS individual (
individual_id INT NOT NULL,
indiv_lastname VARCHAR(45) NOT NULL,
indiv_firstname VARCHAR(45) NOT NULL,
indiv_mi VARCHAR(45) NOT NULL,
email VARCHAR(45) NOT NULL,
birthday DATE NOT NULL,
gender ENUM('M', 'F') NOT NULL,
fb_url VARCHAR(45) NULL,
picture BLOB NOT NULL,
indiv_type ENUM('R', 'H', 'HR') NOT NULL,
PRIMARY KEY (individual_id),
UNIQUE INDEX (email ASC),
UNIQUE INDEX (fb_url ASC)
);
-- -----------------------------------------------------
-- Table homeowner
-- -----------------------------------------------------
DROP TABLE IF EXISTS homeowner;
CREATE TABLE IF NOT EXISTS homeowner (
homeowner_id INT(5) NOT NULL,
years_ho INT(2) NOT NULL,
undertaking TINYINT(1) NOT NULL,
membership TINYINT(1) NOT NULL,
is_resident TINYINT(1) NOT NULL,
current_add INT NOT NULL,
other_add INT NULL,
other_email VARCHAR(45) NULL,
hoa_name VARCHAR(45) NOT NULL,
individual_id INT NOT NULL,
PRIMARY KEY (homeowner_id),
INDEX (hoa_name ASC),
INDEX (current_add ASC),
INDEX (other_add ASC),
INDEX (individual_id ASC),
FOREIGN KEY (hoa_name)
REFERENCES hoa(hoa_name),
FOREIGN KEY (current_add)
REFERENCES address(address_id),
FOREIGN KEY (other_add)
REFERENCES address(address_id),
FOREIGN KEY (individual_id)
REFERENCES individual(individual_id)
);
-- -----------------------------------------------------
-- Table officer_positions
-- -----------------------------------------------------
DROP TABLE IF EXISTS officer_positions;
CREATE TABLE IF NOT EXISTS officer_positions (
position_name VARCHAR(25) NOT NULL,
PRIMARY KEY (position_name)
);
-- -----------------------------------------------------
-- Table elections
-- -----------------------------------------------------
DROP TABLE IF EXISTS elections;
CREATE TABLE IF NOT EXISTS elections (
elec_date DATE NOT NULL,
venue VARCHAR(45) NOT NULL,
quorum TINYINT(1) NOT NULL,
witness_lastname VARCHAR(45) NOT NULL,
witness_firstname VARCHAR(45) NOT NULL,
witness_mi VARCHAR(45) NOT NULL,
witness_mobile BIGINT(10) NOT NULL,
hoa_name VARCHAR(45) NOT NULL,
PRIMARY KEY (elec_date),
FOREIGN KEY (hoa_name)
REFERENCES hoa(hoa_name)
);
-- -----------------------------------------------------
-- Table hoa_officer
-- -----------------------------------------------------
DROP TABLE IF EXISTS hoa_officer;
CREATE TABLE IF NOT EXISTS hoa_officer (
officer_id INT(5) NOT NULL,
homeowner_id INT(5) NOT NULL,
position_name VARCHAR(25) NOT NULL,
office_start DATE NOT NULL,
office_end DATE NOT NULL,
elec_date DATE NOT NULL,
PRIMARY KEY (officer_id),
INDEX (homeowner_id ASC),
INDEX (position_name ASC),
INDEX (elec_date ASC),
FOREIGN KEY (homeowner_id)
REFERENCES homeowner(homeowner_id),
FOREIGN KEY (position_name)
REFERENCES officer_positions(position_name),
FOREIGN KEY (elec_date)
REFERENCES elections(elec_date)
);
-- -----------------------------------------------------
-- Table hoa_files
-- -----------------------------------------------------
DROP TABLE IF EXISTS hoa_files;
CREATE TABLE IF NOT EXISTS hoa_files (
file_id INT NOT NULL,
file_name VARCHAR(45) NOT NULL,
description VARCHAR(45) NOT NULL,
location VARCHAR(45) NOT NULL,
file_type ENUM('document', 'spreadsheet', 'pdf',
'image', 'others') NOT NULL,
date_submitted DATETIME NOT NULL,
file_owner VARCHAR(45) NOT NULL,
file_uploader INT(5) NOT NULL,
hoa_name VARCHAR(45) NOT NULL,
PRIMARY KEY (file_id),
INDEX (hoa_name ASC),
INDEX (file_uploader ASC),
FOREIGN KEY (hoa_name)
REFERENCES hoa(hoa_name),
FOREIGN KEY (file_uploader)
REFERENCES hoa_officer(officer_id)
);
-- -----------------------------------------------------
-- Table property
-- -----------------------------------------------------
DROP TABLE IF EXISTS property;
CREATE TABLE IF NOT EXISTS property (
property_code VARCHAR(6) NOT NULL,
size DECIMAL NOT NULL,
turnover DATE NOT NULL,
property_type ENUM('R', 'C') NOT NULL,
homeowner_id INT(5) NOT NULL,
PRIMARY KEY (property_code),
INDEX (homeowner_id ASC),
FOREIGN KEY (homeowner_id)
REFERENCES homeowner(homeowner_id)
);
-- -----------------------------------------------------
-- Table household
-- -----------------------------------------------------
DROP TABLE IF EXISTS household;
CREATE TABLE IF NOT EXISTS household (
household_id INT(5) NOT NULL,
PRIMARY KEY (household_id)
);
-- -----------------------------------------------------
-- Table resident
-- -----------------------------------------------------
DROP TABLE IF EXISTS resident;
CREATE TABLE IF NOT EXISTS resident (
resident_id INT(5) NOT NULL,
is_renter TINYINT(1) NOT NULL,
relation_ho VARCHAR(45) NOT NULL,
undertaking TINYINT(1) NOT NULL,
household_id INT(5) NOT NULL,
authorized_resident TINYINT(1) NOT NULL,
individual_id INT NOT NULL,
PRIMARY KEY (resident_id),
INDEX (household_id ASC),
INDEX (individual_id ASC),
FOREIGN KEY (household_id)
REFERENCES household(household_id),
FOREIGN KEY (individual_id)
REFERENCES individual(individual_id)
);
-- -----------------------------------------------------
-- Table receipt
-- -----------------------------------------------------
DROP TABLE IF EXISTS receipt;
CREATE TABLE IF NOT EXISTS receipt (
or_no INT NOT NULL,
transact_date DATETIME NOT NULL,
total_amount FLOAT NOT NULL,
PRIMARY KEY (or_no)
);
-- -----------------------------------------------------
-- Table resident_idcard
-- -----------------------------------------------------
DROP TABLE IF EXISTS resident_idcard;
CREATE TABLE IF NOT EXISTS resident_idcard (
resident_idcardno VARCHAR(10) NOT NULL,
date_requested DATETIME NOT NULL,
request_reason VARCHAR(45) NOT NULL,
date_issued DATETIME NOT NULL,
authorizing_officer VARCHAR(45) NOT NULL,
or_no INT NULL,
amount_paid FLOAT NOT NULL,
id_status ENUM('Active', 'Inactive', 'Lost')
NOT NULL,
resident_id INT(5) NOT NULL,
PRIMARY KEY (resident_idcardno),
INDEX (resident_id ASC),
INDEX (or_no ASC),
FOREIGN KEY (resident_id)
REFERENCES resident(resident_id),
FOREIGN KEY (or_no)
REFERENCES receipt (or_no)
);
-- -----------------------------------------------------
-- Table mobile
-- -----------------------------------------------------
DROP TABLE IF EXISTS mobile;
CREATE TABLE IF NOT EXISTS mobile (
mobile_no BIGINT(10) NOT NULL,
individual_id INT NOT NULL,
PRIMARY KEY (mobile_no),
INDEX (individual_id ASC),
FOREIGN KEY (individual_id)
REFERENCES individual(individual_id)
);
-- -----------------------------------------------------
-- Table vehicle
-- -----------------------------------------------------
DROP TABLE IF EXISTS vehicle;
CREATE TABLE IF NOT EXISTS vehicle (
plate_no VARCHAR(7) NOT NULL,
owner_lastname VARCHAR(45) NOT NULL,
owner_firstname VARCHAR(45) NOT NULL,
owner_mi VARCHAR(45) NOT NULL,
resident_id INT(5) NULL,
vehicle_class ENUM('P', 'C') NOT NULL,
vehicle_type ENUM('sedan', 'SUV', 'MPV/AUV', 'van',
'truck', 'motorcycle/scooter', 'others') NOT NULL,
date_registered DATETIME NOT NULL,
reg_fee DECIMAL NOT NULL,
or_no INT NOT NULL,
PRIMARY KEY (plate_no),
INDEX (resident_id ASC),
INDEX (or_no ASC),
FOREIGN KEY (resident_id)
REFERENCES resident(resident_id),
FOREIGN KEY (or_no)
REFERENCES receipt(or_no)
);
-- -----------------------------------------------------
-- Table orcr
-- -----------------------------------------------------
DROP TABLE IF EXISTS orcr;
CREATE TABLE IF NOT EXISTS orcr (
orcr VARCHAR(45) NOT NULL,
plate_no VARCHAR(7) NOT NULL,
years_valid VARCHAR(45) NOT NULL,
orcr_file INT NOT NULL,
PRIMARY KEY (orcr),
INDEX (plate_no ASC),
INDEX (orcr_file ASC),
FOREIGN KEY (plate_no)
REFERENCES vehicle(plate_no),
FOREIGN KEY (orcr_file)
REFERENCES hoa_files(file_id)
);
-- -----------------------------------------------------
-- Table sticker
-- -----------------------------------------------------
DROP TABLE IF EXISTS sticker;
CREATE TABLE IF NOT EXISTS sticker (
sticker_id INT NOT NULL,
year_valid INT(4) NOT NULL,
plate_no VARCHAR(7) NOT NULL,
owner_type ENUM('R', 'NR') NOT NULL,
authorizing_officer INT(5) NOT NULL,
date_acquired DATETIME NOT NULL,
amount_paid DECIMAL NOT NULL,
or_no INT NULL,
PRIMARY KEY (sticker_id),
INDEX (plate_no ASC),
INDEX (authorizing_officer ASC),
INDEX (or_no ASC),
FOREIGN KEY (plate_no)
REFERENCES vehicle(plate_no),
FOREIGN KEY (authorizing_officer)
REFERENCES hoa_officer(officer_id),
FOREIGN KEY (or_no)
REFERENCES receipt(or_no)
);
-- -----------------------------------------------------
-- Table hoaofficer_sched
-- -----------------------------------------------------
DROP TABLE IF EXISTS hoaofficer_sched;
CREATE TABLE IF NOT EXISTS hoaofficer_sched (
officer_id INT(5) NOT NULL,
sched_time ENUM('AM', 'PM') NOT NULL,
avail_Mon TINYINT(1) NULL,
avail_Tue TINYINT(1) NULL,
avail_Wed TINYINT(1) NULL,
avail_Thu TINYINT(1) NULL,
avail_Fri TINYINT(1) NULL,
avail_Sat TINYINT(1) NULL,
avail_Sun TINYINT(1) NULL,
PRIMARY KEY (officer_id, sched_time),
INDEX (officer_id ASC),
FOREIGN KEY (officer_id)
REFERENCES hoa_officer(officer_id)
);
-- -----------------------------------------------------
-- Table asset
-- -----------------------------------------------------
DROP TABLE IF EXISTS asset;
CREATE TABLE IF NOT EXISTS asset (
asset_id VARCHAR(10) NOT NULL,
asset_name VARCHAR(45) NOT NULL,
description VARCHAR(45) NOT NULL,
date_acquired DATE NOT NULL,
for_rent TINYINT(1) NOT NULL,
asset_value FLOAT NOT NULL,
asset_type ENUM('P', 'E', 'F', 'O') NOT NULL,
asset_status ENUM('W', 'DE', 'FR', 'FD', 'DI') NOT NULL,
location VARCHAR(45) NOT NULL,
location_x FLOAT NOT NULL,
location_y FLOAT NOT NULL,
hoa_name VARCHAR(45) NOT NULL,
asset_container VARCHAR(10) NULL,
PRIMARY KEY (asset_id),
INDEX (hoa_name ASC),
INDEX (asset_container ASC),
FOREIGN KEY (hoa_name)
REFERENCES hoa(hoa_name),
FOREIGN KEY (asset_container)
REFERENCES asset(asset_id)
);
-- -----------------------------------------------------
-- Table commercial_prop
-- -----------------------------------------------------
DROP TABLE IF EXISTS commercial_prop;
CREATE TABLE IF NOT EXISTS commercial_prop (
property_code VARCHAR(6) NOT NULL,
commercial_type ENUM('O', 'L', 'R', 'M') NOT NULL,
commercial_maxten INT NOT NULL,
INDEX (property_code ASC),
PRIMARY KEY (property_code),
FOREIGN KEY (property_code)
REFERENCES property(property_code)
);
-- -----------------------------------------------------
-- Table residential_prop
-- -----------------------------------------------------
DROP TABLE IF EXISTS residential_prop;
CREATE TABLE IF NOT EXISTS residential_prop (
property_code VARCHAR(6) NOT NULL,
household_id INT(5) NOT NULL,
INDEX (property_code ASC),
PRIMARY KEY (property_code),
INDEX (household_id ASC),
FOREIGN KEY (property_code)
REFERENCES property(property_code),
FOREIGN KEY (household_id)
REFERENCES household(household_id)
);

CREATE TABLE IF NOT EXISTS Rules
(
	RuleNumber INT PRIMARY KEY NOT NULL,
    RuleDescription VARCHAR(1000) NOT NULL
);

CREATE TABLE IF NOT EXISTS AssetActivity
(
	AssetActivityID INT(8) PRIMARY KEY NOT NULL,
    asset_id VARCHAR(10) NOT NULL,
    Activity_Description VARCHAR(45) NOT NULL,
    Activity_Date DATE NOT NULL,
    incharge_firstname VARCHAR(45) NOT NULL,
    incharge_lastname VARCHAR(45) NOT NULL,
    incharge_mi VARCHAR(3) NOT NULL,
    mobile_no BIGINT NOT NULL,
    activitylocation_x FLOAT NOT NULL,
    activitylocation_y FLOAT NOT NULL,
    or_no INT NOT NULL,
    `Status` ENUM('scheduled', 'ongoing', 'completed', 'deleted') NOT NULL,
    tentative_start DATETIME NOT NULL,
    tentative_end DATETIME NOT NULL,
    actual_start DATETIME NOT NULL,
    actual_end DATETIME NOT NULL,
    officer_id INT(5) NOT NULL,
    hoa_president INT(5) NOT NULL,
    approved TINYINT(1) NOT NULL,
    INDEX `ind_AssetActivity_asset_id` (asset_id),
    INDEX `ind_AssetActivity_mobile_no` (mobile_no),
    INDEX `ind_AssetActivity_or_no` (or_no),
    INDEX `ind_AssetActivity_officer_id` (officer_id),
    INDEX `ind_AssetActivity_hoa_president` (hoa_president),
    CONSTRAINT `fk_AssetActivity_asset_id`
    FOREIGN KEY (asset_id)
    REFERENCES hoa_db.asset (asset_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_receiptID`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_mobile_no`
    FOREIGN KEY (mobile_no)
    REFERENCES hoa_db.mobile (mobile_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_officer_id`
    FOREIGN KEY (officer_id)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_AssetActivity_hoa_president`
    FOREIGN KEY (hoa_president)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

DROP TABLE IF EXISTS BusinessPermit;
CREATE TABLE IF NOT EXISTS BusinessPermit
(
	BusinessPermitID INT PRIMARY KEY NOT NULL,
    Expiration_Date DATE NOT NULL,
    Processing_Officer INT(5) NOT NULL,
    Permit_FileID INT NOT NULL,
    INDEX `ind_BusinessPermit_processing_officer` (Processing_Officer),
    INDEX `ind_BusinessPermit_permit_filename` (Permit_FileID),
    CONSTRAINT `fk_BusinessPermit_processing_officer`
    FOREIGN KEY (Processing_Officer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_BusinessPermit_permit_fileid`
    FOREIGN KEY (Permit_FileID)
    REFERENCES hoa_db.hoa_files (file_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Business
(
    Business_Name VARCHAR(45) PRIMARY KEY NOT NULL,
    BusinessOwner_Name VARCHAR(45) UNIQUE NOT NULL,
    Residentship TINYINT(1) NOT NULL,
    Business_Address INT NOT NULL,
    Business_Email VARCHAR(45) NOT NULL,
    Business_Description VARCHAR(45) NOT NULL,
    Business_Type ENUM('Sole Proprietorship', 'Partnership', 'Corporation') NOT NULL,
	Business_StartDATE DATE NOT NULL,
    Business_EndDATE DATE NULL,
    Business_FacebookURL VARCHAR(45) NULL,
    BusinessPermitID INT NOT NULL,
    INDEX `ind_Business_Address` (Business_Address),
    INDEX `ind_Business_Business_Permit_ID` (BusinessPermitID),
    CONSTRAINT `fk_Business_Address`
    FOREIGN KEY (Business_Address)
    REFERENCES hoa_db.address (address_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_Business_Business_Permit_ID` 
    FOREIGN KEY (BusinessPermitID)
    REFERENCES hoa_db.BusinessPermit (BusinessPermitID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS BusinessEmployees
(
	EmployeeID INT PRIMARY KEY NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    Employee_LastName VARCHAR(45) NOT NULL,
    Employee_FirstName VARCHAR(45) NOT NULL,
    `Employee_MobileNo.` BIGINT NOT NULL,
    Employee_Position VARCHAR(45) NOT NULL,
    Authorized_Employee TINYINT(1) NOT NULL,
    INDEX `ind_BusinessEmployees_mobile_no` (`Employee_MobileNo.`),
    INDEX `ind_BusinessEmployees_Business_Name` (Business_Name),
    CONSTRAINT `fk_BusinessEmployees_mobile_no`
    FOREIGN KEY (`Employee_MobileNo.`)
    REFERENCES hoa_db.mobile (mobile_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_BusinessEmployees_Business_Name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS business_schedule
(
	business_sched_time ENUM('AM', 'PM') NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    open_Mon TINYINT(1) NOT NULL,
    open_Tue TINYINT(1) NOT NULL,
    open_Wed TINYINT(1) NOT NULL,
    open_Thu TINYINT(1) NOT NULL,
    open_Fri TINYINT(1) NOT NULL,
    open_Sat TINYINT(1) NOT NULL,
    open_Sun TINYINT(1) NOT NULL,
    PRIMARY KEY (business_sched_time, Business_Name),
    INDEX `ind_business_schedule_business_name` (Business_Name),
    CONSTRAINT `fk_business_schedule_business_name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Incident
(
	IncidentID INT PRIMARY KEY NOT NULL,
    Incident_Date DATE NOT NULL,
    Incident_Description VARCHAR(45) NOT NULL,
    isResident VARCHAR(45) NOT NULL,
    Business_Involved VARCHAR(45) NOT NULL,
    InvestigatingOfficer_ID INT(5) NOT NULL,
    PenaltyImposed VARCHAR(45) NULL,
    SecondingOfficer_ID INT(5) NOT NULL,
    Seconding_PenaltyImposed VARCHAR(45) NULL,
    INDEX `ind_incident_business_involved` (Business_Involved),
    INDEX `ind_incident_investigating_officer` (InvestigatingOfficer_ID),
    INDEX `ind_incident_seconding_officer` (SecondingOfficer_ID),
    CONSTRAINT `fk_incident_business_involved`
    FOREIGN KEY (Business_Involved)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_investigating_officer`
    FOREIGN KEY (InvestigatingOfficer_ID)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_seconding_officer`
    FOREIGN KEY (SecondingOfficer_ID)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Evidence
(
	EvidenceID INT PRIMARY KEY NOT NULL,
    Evidence_Name VARCHAR(45) NOT NULL,
    Evidence_Description VARCHAR(45) NOT NULL,
    Evidence_FileID INT NOT NULL,
    SubmittingResident INT(5) NOT NULL,
    AcceptingOfficer INT(5) NOT NULL,
    EvidenceSubmission_Date DATE NOT NULL,
    IncidentID INT NOT NULL,
    INDEX `ind_evidence_fileid` (Evidence_FileID),
    INDEX `ind_evidence_submittingresident` (SubmittingResident),
    INDEX `ind_evidence_acceptingofficer` (AcceptingOfficer),
    INDEX `ind_evidence_incidentid` (IncidentID),
    CONSTRAINT `fk_evidence_filename`
    FOREIGN KEY (Evidence_FileID)
    REFERENCES hoa_db.hoa_files (file_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_submittingresident`
    FOREIGN KEY (SubmittingResident)
    REFERENCES hoa_db.resident (resident_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_acceptingofficer`
    FOREIGN KEY (AcceptingOfficer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidence_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS EvidencesUsed
(
	IncidentID INT PRIMARY KEY NOT NULL,
    EvidenceID INT NOT NULL,
    INDEX `ind_evidencesused_incidentID` (IncidentID),
    INDEX `ind_evidencesued_evidenceID` (EvidenceID),
    CONSTRAINT `fk_evidencesused_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_evidencesued_evidenceID`
    FOREIGN KEY (EvidenceID)
    REFERENCES hoa_db.Evidence (EvidenceID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS PersonsInvolved
(
	IncidentID INT PRIMARY KEY NOT NULL,
    individual_id INT NOT NULL,
    INDEX `ind_personsinvolved_individual_id` (individual_id),
    INDEX `ind_personsinvolved_incidentID` (IncidentID),
    CONSTRAINT `fk_personsinvolved_individual_id`
    FOREIGN KEY (individual_id)
    REFERENCES hoa_db.individual (individual_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_personsinvolvd_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Incident_RulesBroken
(
	IncidentID INT PRIMARY KEY NOT NULL,
    RuleNumber INT NOT NULL,
    INDEX `ind_incident_rulenumber` (RuleNumber),
    INDEX `ind_incident_incidentID` (IncidentID),
    CONSTRAINT `fk_incident_rulenumber`
    FOREIGN KEY (RuleNumber)
    REFERENCES hoa_db.Rules (RuleNumber)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_incident_incidentID`
    FOREIGN KEY (IncidentID)
    REFERENCES hoa_db.Incident (IncidentID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS MonthlyDueBill
(
	BillID INT PRIMARY KEY NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    `Month` INT NOT NULL,
    `Year` INT NOT NULL,
    Date_Generated DATE NOT NULL,
    Awarded_Discount FLOAT NULL,
    Unpaiid_Dues FLOAT NULL,
    Incurred_Penalties FLOAT NULL,
    Deduction_Amount FLOAT NULL,
    Total_Amount FLOAT NOT NULL,
    Penaltied_Employee INT NOT NULL,
    INDEX `ind_monthlyduebill_business_name` (Business_Name),
    INDEX `ind_monthlyduebill_employeeid` (Penaltied_Employee),
    CONSTRAINT `fk_monthlyduebill_business_name`
    FOREIGN KEY (Business_Name)
    REFERENCES hoa_db.Business (Business_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_monthlyduebill_employeeid`
    FOREIGN KEY (Penaltied_Employee)
    REFERENCES hoa_db.BusinessEmployees (EmployeeID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS BillItems
(
	BillItemID INT PRIMARY KEY NOT NULL,
    BillID INT NOT NULL,
    Description VARCHAR(45) NOT NULL,
    Amount FLOAT NOT NULL,
    INDEX `ind_billitems_billid` (BillID),
    CONSTRAINT `fk_billitems_billid`
    FOREIGN KEY (BillID)
    REFERENCES hoa_db.MonthlyDueBill (BillID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS Payment
(
	or_no INT PRIMARY KEY NOT NULL,
    BillID INT NOT NULL,
    Date_Of_Payment DATE NOT NULL,
    Payer VARCHAR(45) NOT NULL,
    Receiving_Officer INT(5) NOT NULL,
    Business_Name VARCHAR(45) NOT NULL,
    BusinessOwner_Payer VARCHAR(45) NULL,
    AuthorizedEmployeeID_Payer INT NULL,
    INDEX `ind_payment_billid` (BillID),
    INDEX `ind_payment_receiving_officer` (Receiving_Officer),
    INDEX `ind_payment_businessowner` (BusinessOwner_Payer),
    INDEX `ind_payment_employeeid` (AuthorizedEmployeeID_Payer),
    index `ind_payment_or_no` (or_no),
    CONSTRAINT `fk_payment_billid`
    FOREIGN KEY (BillID)
    REFERENCES hoa_db.MonthlyDueBill (BillID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_receiving_officer` 
    FOREIGN KEY (Receiving_Officer)
    REFERENCES hoa_db.hoa_officer (officer_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_businessowner`
    FOREIGN KEY (BusinessOwner_Payer)
    REFERENCES hoa_db.Business (BusinessOwner_Name)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_employeeid`
    FOREIGN KEY (AuthorizedEmployeeID_Payer)
    REFERENCES hoa_db.BusinessEmployees (EmployeeID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_payment_or_no`
    FOREIGN KEY (or_no)
    REFERENCES hoa_db.receipt (or_no)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);



-- -----------------------------------------------------
-- INSERT RECORDS
-- -----------------------------------------------------
-- REGION

INSERT INTO regions (region)
VALUES 
('Region I'),
('Region II'),
('Region III'),
('Region IV-A'),
('Region IV-B'),
('Region V'),
('Region VI'),
('Region VII'),
('Region VIII'),
('Region IX'),
('Region X'),
('Region XI'),
('Region XII'),
('Region XIII'),
('NCR'),
('CAR'),
('BARMM');

-- PROVINCES
INSERT INTO provinces (province_name, region)
VALUES ('Metro Manila', 'NCR'),
       ('Bataan', 'Region III'),
       ('Batangas', 'Region IV-A'),
       ('Cavite', 'Region IV-A'),
       ('Laguna', 'Region IV-A');

-- CITIES
INSERT INTO cities (city, province)
VALUES ('Manila', 'Metro Manila'),
       ('Pasay', 'Metro Manila'),
       ('Pasig', 'Metro Manila'),
       ('Dasmarinas', 'Cavite'),
       ('Santa Rosa', 'Laguna');

-- ZIPCODES
INSERT INTO zipcodes (zipcode, province, brgy, city)
VALUES ('1001', 'Metro Manila', '680', 'Manila'),
       ('1002', 'Metro Manila', '780', 'Manila'),
       ('1003', 'Metro Manila', '880', 'Manila');


-- ADDRESS
INSERT INTO address (address_id, stno, stname, brgy, city, province, zipcode, x_coord, y_coord)
VALUES (10000020, '24', 'De La Salle St.', '680', 'Manila', 'Metro Manila', 1001, 123.4567, 234.5678),
       (10000021, '45', 'De La Salle St.', '680', 'Manila', 'Metro Manila', 1001, 345.6789, 456.7890),
       (10000022, '77', 'Benilde St.', '680', 'Manila', 'Metro Manila', 1001, 567.8901, 678.9101),
       (10000023, '13', 'Mutien-Marie St.', '680', 'Manila', 'Metro Manila', 1001, 789.1011, 891.0111),
       (10000024, '50', 'Green Archer St.', '780', 'Manila', 'Metro Manila', 1002, 910.1112, 101.1121),
       (10000025, '11', 'Reims St.', '780', 'Manila', 'Metro Manila', 1002, 131.4151, 617.1819);

-- HOA 

INSERT INTO hoa (hoa_name, office_add, year_est, website, subd_name, dues_collection)		
VALUES ('Animo HOA', 10000020, 1911, 'www.animohoa.ph',
'Animo Green Homes', '15'),
-- ('Archers Residences', '10'),
('Berde 1 HOA', 10000025, 2005, 'www.berdehoa.ph',
'Berde Subdivision 1', '20');

-- INDIVIDUAL 

INSERT INTO individual (individual_id, indiv_lastname, indiv_firstname, indiv_mi, email, birthday, gender, fb_url, picture, indiv_type)
VALUES
  (2023202410, 'Dela Cruz', 'Juan', 'R', 'juandelacruz@gmail.com', '2000-01-05', 'M', 'jdlcruz', 'pic1.jpg', 'R'),
  (2023202411, 'Dela Cruz', 'Juanita', 'G', 'juanitadelacruz@gmail.com', '2002-10-10', 'F', 'juanitadlc', 'pic2.jpg', 'H'),
  (2023202412, 'Rizal', 'Jose', 'P', 'joserizal@gmail.com', '1961-06-19', 'M', 'jprizal', 'pic3.jpg', 'H'),
  (2023202413, 'Bonifacio', 'Andres', 'A', 'andresbonifacio@gmail.com', '1983-11-30', 'M', NULL, 'pic4.jpg', 'R'),
  (2023202414, 'Silang', 'Gabriela', 'R', 'gabrielasilang@gmail.com', '1991-03-19', 'F', 'grsilang', 'pic5.jpg', 'H'),
  (2023202415, 'Luna', 'Juan', 'M', 'juanluna@gmail.com', '1991-03-19', 'M', 'jluna', 'pic5.jpg', 'H');



-- HOMEOWNER 

INSERT INTO homeowner (homeowner_id, years_ho, undertaking, membership, is_resident, current_add, other_add, other_email, hoa_name, individual_id)
VALUES
  (30011, 5, 1, 1, 1, 10000021, NULL, NULL, 'Animo HOA', 2023202410),
  (30012, 12, 1, 1, 1, 10000022, NULL, NULL, 'Animo HOA', 2023202412),
  (30013, 10, 1, 1, 1, 10000023, NULL, NULL, 'Animo HOA', 2023202414),
  (30014, 6, 1, 1, 1, 10000024, NULL, NULL, 'Animo HOA', 2023202415);




-- OFFICER POSITIONS

INSERT INTO officer_positions (position_name)
VALUES ('President'),
('Vice-President'),
('Secretary'),
('Treasurer'),
('Auditor');

-- ELECTIONS 

INSERT INTO elections (elec_date, venue, quorum, witness_lastname, witness_firstname, witness_mi, witness_mobile, hoa_name)
VALUES ('2022-1-12', 'Animo Clubhouse', 0, 'Aquino',
'Melchora', 'B', 9172001434, 'Animo HOA'),
('2022-11-19', 'Animo Clubhouse', 0, 'Del Pilar',
'Gregorio', 'A',9224657809, 'Animo HOA'),
('2022-11-26', 'Animo Clubhouse', 1, 'Balagtas',
'Francisco', 'K',9224657809, 'Animo HOA');


-- HOA OFFICER
INSERT INTO hoa_officer (officer_id, homeowner_id, position_name, office_start, office_end, elec_date)
VALUES
	  (99901, 30011, 'President', '2023-01-09', '2024-01-07', '2022-11-26'),
	  (99902, 30012, 'Secretary', '2023-01-09', '2024-01-07', '2022-11-26'),
	  (99903, 30013, 'Treasurer', '2023-01-09', '2024-01-07', '2022-11-26');


-- HOA FILES
INSERT INTO hoa_files (file_id, file_name, description, location, file_type , date_submitted, file_owner, file_uploader, hoa_name)
VALUES (555556661, 'bylaws.pdf', 'notarized by-laws', 'D:/Animo HOA Documents/', 
		'pdf', '2020-03-17', 'Jose Rizal', 99901, 'Animo HOA'),
       (555556662, 'ABC1234-ORCR2022.pdf', 'ABC1234 ORCR 2022', 'D:/Animo HOA Documents/Vehicle Registration/', 
       'pdf', '2022-05-06', 'Juan Dela Cruz', 99902, 'Animo HOA'),
       (555556663, 'DEF6789-ORCR2022.pdf', 'DEF6789 ORCR 2022', 'D:/Animo HOA Documents/Vehicle Registration/', 
       'pdf', '2022-05-10', 'Emilio Aguinaldo', 99902, 'Animo HOA');


-- PROPERTY

INSERT INTO property (property_code, size, turnover, property_type, homeowner_id)
VALUES ('B35L02', 300.00, '2018-02-15', 'R', 30011),
('B11L08', 180.00, '2011-03-16', 'R', 30012),
('B42L09', 225.00, '2013-04-17', 'R', 30013),
('B25L10', 250.00, '2017-05-18', 'R', 30014),
('B39L13', 180.00, '2020-06-19', 'C', 30014);


-- HOUSEHOLD

INSERT INTO household (household_id)
VALUES (42001),
(42002),
(42003),
(42004);


-- RESIDENT

INSERT INTO resident (resident_id, is_renter, relation_ho, undertaking, household_id, authorized_resident, individual_id)	
VALUES (40011, 0, 'husband', 1, 42001, 1, 2023202410),
(40012, 0, 'homeowner', 1, 42001, 1, 2023202411),
(40013, 0, 'homeowner', 1, 42002, 1, 2023202412),
(40014, 1, 'none', 1, 42003, 0, 2023202413),
(40015, 0, 'homeowner', 1, 42004, 1, 2023202414);



-- RECEIPT

INSERT INTO receipt (or_no, transact_date, total_amount)
VALUES (202379991,'2023-07-20',1500.00),
(202379992,'2023-08-25',2250.00),
(202379993,'2023-09-01',830.00);



-- RESIDENT IDCARD

INSERT INTO resident_idcard (resident_idcardno, date_requested, request_reason, 
							 date_issued, authorizing_officer, or_no, amount_paid, id_status, resident_id)
VALUES ('ANIMO22001', '2022-01-30', 'New ID', '2022-02-04', 99902, 202379991, 0.00, 'Active', 40013),
('ANIMO22002', '2022-02-20-', 'New ID', '2022-02-04-', 99902, 202379992, 0.00, 'Active', 40011),
('ANIMO22003', '2022-02-20', 'New ID', '2022-02-04', 99902, 202379993, 0.00, 'Active', 40012);


-- MOBILE

INSERT INTO mobile (mobile_no, individual_id)
VALUES 
(9175459870, 2023202410),
(9173110229, 2023202411),
(9207639255, 2023202412),
(9226974142, 2023202413),
(9181008621, 2023202414),
(9224489773, 2023202415);

-- VEHICLE

INSERT INTO vehicle (plate_no, owner_lastname, owner_firstname, owner_mi, resident_id, vehicle_class, vehicle_type, date_registered, reg_fee, or_no)
VALUES 
  ('ABC1234', 'Dela Cruz', 'Juan', 'R', 40011, 'P', 'SUV', '2023-07-20', 150.00, 202379991),
  ('XYZ5678', 'Dela Cruz', 'Juanita', 'G', 40012, 'C', 'Truck', '2023-08-15', 150.00, 202379992),
  ('LMN4321', 'Rizal', 'Jose', 'P', 40013, 'P', 'Van', '2023-08-30', 200.00, 202379993);


-- ORCR

INSERT INTO orcr (orcr, plate_no, years_valid, orcr_file)
VALUES ('ORCR-109634885P', 'ABC1234', '2023-02-20 to
2024-02-19', 555556662),
('ORCR-217459009C', 'XYZ5678', '2023-06-25 to
2024-06-24', 555556663);

-- STICKER	

INSERT INTO sticker (sticker_id, year_valid, plate_no, owner_type, authorizing_officer, date_acquired, amount_paid, or_no)
VALUES
  (1, 2023, 'ABC1234', 'R', 99901, '2023-11-02 10:00:00', 500.00, 202379991),
  (2, 2023, 'XYZ5678', 'NR', 99902, '2023-11-02 11:00:00', 600.00, 202379992),
  (3, 2023, 'LMN4321', 'R', 99903, '2023-11-02 12:00:00', 700.00, 202379993);



-- HOA OFFICER SCHED 
 
INSERT INTO hoaofficer_sched (officer_id, sched_time, avail_Mon, avail_Tue, 
							  avail_Wed, avail_Thu, avail_Fri, avail_Sat, avail_Sun)
VALUES (99901, 'AM', 1, 1, 1, 1, 1, 1, 1),
(99902, 'PM', 1, 1, 1, 1, 1, 1, 1);



-- ASSET

INSERT INTO asset (asset_id, asset_name, description, date_acquired, 
				   for_rent, asset_value, asset_type, asset_status, location, 
                   location_x, location_y, hoa_name, asset_container)
VALUES ('P000000001', 'Animo HOA Clubhouse', 'clubhouse',
'1995-10-06', 1, 18000000.00, 'P', 'W', '24 De La Salle St.',
123.4567, 234.5678, 'Animo HOA', NULL),
('E000000001', 'LED projector', 'projector',
'2021-12-01', 1, 75000.00, 'E', 'W', '24 De La Salle St.',
123.4567, 234.5678, 'Animo HOA', 'P000000001'),
('P000000002', 'Animo HOA Basketball Court',
'basketball court', '1996-04-01', 1, 9000000.00, 'P', 'W', '01
Benilde St.', 543.2100, 765.4321, 'Animo HOA', NULL);


-- COMMERCIAL PROP

INSERT INTO commercial_prop (property_code, commercial_type, commercial_maxten)
VALUES ('B39L13','M',10);

-- RESIDENTIAL PROP

INSERT INTO residential_prop (property_code, household_id)
VALUES ('B35L02', 42001),
('B11L08', 42002),
('B42l09', 42003),
('B25L10', 42004);




-- RULES
INSERT INTO Rules (RuleNumber, RuleDescription)
VALUES
(1, 'No Parking in Designated Fire Lanes'),
(2, 'Quiet Hours from 10:00 PM to 7:00 AM'),
(3, 'Speed Limit in the Community is 25 MPH');


-- ASSET ACTIVITY

INSERT INTO AssetActivity (AssetActivityID, asset_id, Activity_Description, Activity_Date, 
                           incharge_firstname, incharge_lastname, incharge_mi, mobile_no, 
                           activitylocation_x, activitylocation_y, or_no, `Status`, tentative_start, 
                           tentative_end, actual_start, actual_end, officer_id, hoa_president, approved)
VALUES (12345678, 'P000000001', 'Activity', '2023-09-09', 'Dela Cruz', 'Juan', 'R', 9175459870, 
        0.0, 0.0, 202379991, 'scheduled', '2023-09-09', '2023-09-10', '2023-09-10', '2023-09-11', 
        99901, 99901, 1),
       (87654321, 'E000000001', 'Activity2', '2023-08-04', 'Dela Cruz', 'Juanita', 'G', 9173110229, 
        0.0, 0.0, 202379992, 'scheduled', '2023-08-04', '2023-08-05', '2023-08-04', '2023-08-05', 
        99902, 99902, 1),
       (12344321, 'P000000002', 'Activity3', '2023-12-05', 'Rizal', 'Jose', 'P', 9207639255, 
        0.0, 0.0, 202379993, 'scheduled', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', 
        99901, 99901, 1);




-- BUSINESS PERMIT
INSERT INTO BusinessPermit (BusinessPermitID, Expiration_Date, Processing_Officer, Permit_FileID)
VALUES
    (1, '2023-12-31', 99901, 555556661),
    (2, '2024-06-30', 99902, 555556662),
    (3, '2024-03-15', 99903, 555556663);


-- BUSINESS
INSERT INTO Business (Business_Name, BusinessOwner_Name, Residentship, Business_Address, Business_Email, 
					  Business_Description, Business_Type, Business_StartDATE, Business_EndDATE, 
					  Business_FacebookURL, BusinessPermitID)
VALUES
    ('Stir-Fry Classics', 'Juan Dela Cruz', 1, 10000020, 'juan@sfc.ph', 'Karinderya', 
    'Sole Proprietorship', '2023-01-15', '2023-12-31', 'https://facebook.com/stirfryclassics', 1),
    ('Salon ni Maria', 'Maria Santos', 0, 10000021, 'maria@salonni-maria.ph', 'Beauty and Wellness', 
    'Partnership', '2023-02-20', NULL, 'https://facebook.com/salonni-maria', 2),
    ('TechOne', 'Antonio Reyes', 1, 10000025, 'antonio@techone.ph', 'Information Technology Services', 
    'Corporation', '2023-03-25', '2023-09-30', NULL, 3);
    

-- BUSINESS EMPLOYEES
INSERT INTO BusinessEmployees (EmployeeID, Business_Name, Employee_LastName, Employee_FirstName, `Employee_MobileNo.`, Employee_Position, Authorized_Employee)
VALUES
(1, 'Stir-Fry Classics', 'Dela Cruz', 'Juan', 9175459870, 'Manager', 1),
(2, 'Salon ni Maria', 'Santos', 'Maria', 9173110229, 'Stylist', 1),
(3, 'TechOne', 'Reyes', 'Antonio', 9207639255, 'IT Specialist', 1);



-- BUSINESS SCHEDULE
INSERT INTO business_schedule (business_sched_time, Business_Name, open_Mon, open_Tue, open_Wed, open_Thu, open_Fri, open_Sat, open_Sun)
VALUES
    ('AM', 'Stir-Fry Classics', 1, 1, 1, 1, 1, 0, 0),
    ('PM', 'Stir-Fry Classics', 0, 0, 0, 0, 0, 1, 1),
    ('AM', 'Salon ni Maria', 1, 1, 1, 1, 1, 0, 0),
    ('PM', 'Salon ni Maria', 0, 0, 0, 0, 0, 1, 1),
    ('AM', 'TechOne', 1, 1, 1, 1, 1, 0, 0),
    ('PM', 'TechOne', 0, 0, 0, 0, 0, 1, 1);
    
    
-- INCIDENT
INSERT INTO Incident (IncidentID, Incident_Date, Incident_Description, isResident, 
					  Business_Involved, InvestigatingOfficer_ID, PenaltyImposed, SecondingOfficer_ID, Seconding_PenaltyImposed)
VALUES
    (1, '2023-10-15', 'Noise Complaint', 'Yes', 'Stir-Fry Classics', 99901, 'Warning', 99902, NULL),
    (2, '2023-11-05', 'Vandalism Report', 'No', 'Salon ni Maria', 99902, 'Fine', 99903, 'Written Warning'),
    (3, '2023-12-20', 'Theft Incident', 'No', 'TechOne', 99901, 'Penalty', 99903, 'Suspension');

-- EVIDENCE
INSERT INTO Evidence (EvidenceID, Evidence_Name, Evidence_Description, Evidence_FileID, 
					  SubmittingResident, AcceptingOfficer, EvidenceSubmission_Date, IncidentID)
VALUES
    (1, 'CCTV Footage', 'Video evidence of the incident', 555556661, 40011, 99901, '2023-10-20', 1),
    (2, 'Photo Evidence', 'Photographs of the incident scene', 555556662, 40012, 99902, '2023-11-10', 2),
    (3, 'Statement Document', 'Written statement document', 555556663, 40013, 99903, '2023-12-25', 3);


-- EVIDENCES USED
INSERT INTO EvidencesUsed (IncidentID, EvidenceID)
VALUES
    (1, 1),
    (2, 2),
    (3, 3);
    

-- PERSONS INVOLVED
INSERT INTO PersonsInvolved (IncidentID, individual_id)
VALUES
    (1, 2023202410),
    (2, 2023202411),
    (3, 2023202412);

-- INCIDENT RULES BROKEN
INSERT INTO Incident_RulesBroken (IncidentID, RuleNumber)
VALUES
    (1, 1),
    (2, 2),
    (3, 3);


-- MONTHLY DUE BILL
INSERT INTO MonthlyDueBill (BillID, Business_Name, `Month`, `Year`, Date_Generated,
							Awarded_Discount, Unpaiid_Dues, Incurred_Penalties, 
                            Deduction_Amount, Total_Amount, Penaltied_Employee)
VALUES
    (1, 'Stir-Fry Classics', 10, 2023, '2023-10-15', 1000.00, 1500.00, 200.00, 0.00, 2700.00, 1),
    (2, 'Salon ni Maria', 11, 2023, '2023-11-15', 0.00, 1800.00, 0.00, 200.00, 2000.00, 2),
    (3, 'TechOne', 12, 2023, '2023-12-15', 0.00, 2250.00, 0.00, 150.00, 2400.00, 3);

-- BILL ITEMS
INSERT INTO BillItems (BillItemID, BillID, Description, Amount)
VALUES
    (1, 1, 'Monthly Dues', 1500.00),
    (2, 1, 'Penalties', 200.00),
    (3, 1, 'Discount', -1000.00);

-- PAYMENT
INSERT INTO Payment (or_no, BillID, Date_Of_Payment, Payer, Receiving_Officer, Business_Name, BusinessOwner_Payer, AuthorizedEmployeeID_Payer)
VALUES
    (202379991, 1, '2023-01-05', 'Juan Dela Cruz', 99901, 'Stir-Fry Classics', NULL, NULL),
    (202379992, 1, '2023-01-10', 'Maria Santos', 99902, 'Salon ni Maria', NULL, NULL),
    (202379993, 2, '2023-02-15', 'Antonio Reyes', 99903, 'TechOne', NULL, NULL);
